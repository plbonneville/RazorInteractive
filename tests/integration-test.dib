#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":["c#","cs"],"languageName":"C#","name":"csharp"},{"aliases":["f#","fs"],"languageName":"F#","name":"fsharp"},{"aliases":[],"languageName":"HTML","name":"html"},{"aliases":[],"languageName":"http","name":"httpRequest"},{"aliases":["js"],"languageName":"JavaScript","name":"javascript"},{"aliases":[],"languageName":"KQL","name":"kql"},{"aliases":[],"languageName":"Mermaid","name":"mermaid"},{"aliases":["powershell"],"languageName":"PowerShell","name":"pwsh"},{"aliases":[],"name":"razor"},{"aliases":[],"languageName":"SQL","name":"sql"},{"aliases":[],"name":"value"}]}}

#!pwsh

# 0. Clean-up the bin and obj folders
Get-ChildItem .. -Include bin,obj -Recurse | Remove-Item -Force -Recurse

# 1. Pack up the NuGet package. Note, you should increment the version because the previous one, once installed, will be in your NuGet cache
$version = [System.DateTime]::Now.ToString("yyyy.MM.dd.HHmmss")
dotnet pack /p:PackageVersion=$version ../src/RazorInteractive/RazorInteractive.csproj

# 2. Check that the package is there
Get-ChildItem .. -Recurse *.nupkg

#!csharp

#i nuget:/workspaces/RazorInteractive/src/RazorInteractive/bin/Release
#r "nuget:RazorInteractive"

#!csharp

#!razor

@{
    var colors = new [] { "red", "green", "blue" };
}

<ol>
@foreach(var color in colors)
{
    <li style="color: @color;">@color</li>
}
</ol>

#!csharp

var firstname = "John";
var lastname = "Doe";
var colors = new [] { "red", "green", "blue" };

#!csharp

#!razor

<p>Hello <b>@Model.firstname @Model.lastname</b>, what is you favorite a color?</p>

<ol>
@foreach(var color in Model.colors)
{
    <li style="color: @color;">@color</li>
}
</ol>
